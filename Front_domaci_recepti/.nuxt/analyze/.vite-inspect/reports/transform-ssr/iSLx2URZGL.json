{
  "resolvedId": "C:/Users/mario/Documents/Projekti web/Recepti/Front_domaci_recepti/node_modules/vuetify/lib/components/VDatePicker/VDatePickerMonth.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\n// Styles\nimport \"./VDatePickerMonth.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\"; // Composables\nimport { getWeek, useDate } from \"../../composables/date/date.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, ref, watch } from 'vue';\nimport { genericComponent, propsFactory, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVDatePickerMonthProps = propsFactory({\n  allowedDates: [Array, Function],\n  disabled: Boolean,\n  color: String,\n  month: [Number, String],\n  hideWeekdays: Boolean,\n  max: null,\n  min: null,\n  modelValue: Array,\n  multiple: Boolean,\n  showAdjacentMonths: Boolean,\n  showWeek: Boolean,\n  year: [Number, String]\n}, 'VDatePickerMonth');\nexport const VDatePickerMonth = genericComponent()({\n  name: 'VDatePickerMonth',\n  props: makeVDatePickerMonthProps(),\n  emits: {\n    'update:modelValue': date => true,\n    'update:month': date => true,\n    'update:year': date => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const daysRef = ref();\n    const adapter = useDate();\n    // model comes in always as array\n    // leaves as array if multiple\n    const model = useProxiedModel(props, 'modelValue', [], v => wrapInArray(v));\n    const displayValue = computed(() => {\n      if (model.value.length > 0) return adapter.date(model.value[0]);\n      if (props.min) return adapter.date(props.min);\n      if (Array.isArray(props.allowedDates)) return adapter.date(props.allowedDates[0]);\n      return adapter.date();\n    });\n    const year = useProxiedModel(props, 'year', undefined, v => {\n      const value = v != null ? Number(v) : adapter.getYear(displayValue.value);\n      return adapter.startOfYear(adapter.setYear(adapter.date(), value));\n    }, v => adapter.getYear(v));\n    const month = useProxiedModel(props, 'month', undefined, v => {\n      const value = v != null ? Number(v) : adapter.getMonth(displayValue.value);\n      const date = adapter.setYear(adapter.date(), adapter.getYear(year.value));\n      return adapter.setMonth(date, value);\n    }, v => adapter.getMonth(v));\n    const weeksInMonth = computed(() => {\n      const weeks = adapter.getWeekArray(month.value);\n      const days = weeks.flat();\n\n      // Make sure there's always 6 weeks in month (6 * 7 days)\n      // But only do it if we're not hiding adjacent months?\n      const daysInMonth = 6 * 7;\n      if (days.length < daysInMonth) {\n        const lastDay = days[days.length - 1];\n        let week = [];\n        for (let day = 1; day <= daysInMonth - days.length; day++) {\n          week.push(adapter.addDays(lastDay, day));\n          if (day % 7 === 0) {\n            weeks.push(week);\n            week = [];\n          }\n        }\n      }\n      return weeks;\n    });\n    const daysInMonth = computed(() => {\n      const days = weeksInMonth.value.flat();\n      const today = adapter.date();\n      return days.map((date, index) => {\n        const isoDate = adapter.toISO(date);\n        const isAdjacent = !adapter.isSameMonth(date, month.value);\n        return {\n          date,\n          isoDate,\n          formatted: adapter.format(date, 'keyboardDate'),\n          year: adapter.getYear(date),\n          month: adapter.getMonth(date),\n          isDisabled: isDisabled(date),\n          isWeekStart: index % 7 === 0,\n          isWeekEnd: index % 7 === 6,\n          isSelected: model.value.some(value => adapter.isSameDay(date, value)),\n          isToday: adapter.isSameDay(date, today),\n          isAdjacent,\n          isHidden: isAdjacent && !props.showAdjacentMonths,\n          isHovered: false,\n          localized: adapter.format(date, 'dayOfMonth')\n        };\n      });\n    });\n    const weeks = computed(() => {\n      return weeksInMonth.value.map(week => {\n        return getWeek(adapter, week[0]);\n      });\n    });\n    function isDisabled(value) {\n      if (props.disabled) return true;\n      const date = adapter.date(value);\n      if (props.min && adapter.isAfter(adapter.date(props.min), date)) return true;\n      if (props.max && adapter.isAfter(date, adapter.date(props.max))) return true;\n      if (Array.isArray(props.allowedDates) && props.allowedDates.length > 0) {\n        return !props.allowedDates.some(d => adapter.isSameDay(adapter.date(d), date));\n      }\n      if (typeof props.allowedDates === 'function') {\n        return !props.allowedDates(date);\n      }\n      return false;\n    }\n    function onClick(value) {\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => adapter.isSameDay(selection, value));\n        if (index === -1) {\n          model.value = [...model.value, value];\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n      } else {\n        model.value = [value];\n      }\n    }\n    watch(displayValue, val => {\n      month.value = val;\n      year.value = val;\n    });\n    return () => _createVNode(\"div\", {\n      \"class\": \"v-date-picker-month\"\n    }, [props.showWeek && _createVNode(\"div\", {\n      \"key\": \"weeks\",\n      \"class\": \"v-date-picker-month__weeks\"\n    }, [!props.hideWeekdays && _createVNode(\"div\", {\n      \"key\": \"hide-week-days\",\n      \"class\": \"v-date-picker-month__day\"\n    }, [_createTextVNode(\"\\xA0\")]), weeks.value.map(week => _createVNode(\"div\", {\n      \"class\": ['v-date-picker-month__day', 'v-date-picker-month__day--adjacent']\n    }, [week]))]), _createVNode(\"div\", {\n      \"ref\": daysRef,\n      \"class\": \"v-date-picker-month__days\"\n    }, [!props.hideWeekdays && adapter.getWeekdays().map(weekDay => _createVNode(\"div\", {\n      \"class\": ['v-date-picker-month__day', 'v-date-picker-month__weekday']\n    }, [weekDay])), daysInMonth.value.map((item, i) => {\n      const slotProps = {\n        props: {\n          onClick: () => onClick(item.date)\n        },\n        item,\n        i\n      };\n      return _createVNode(\"div\", {\n        \"class\": ['v-date-picker-month__day', {\n          'v-date-picker-month__day--adjacent': item.isAdjacent,\n          'v-date-picker-month__day--hide-adjacent': item.isHidden,\n          'v-date-picker-month__day--hovered': item.isHovered,\n          'v-date-picker-month__day--selected': item.isSelected,\n          'v-date-picker-month__day--week-end': item.isWeekEnd,\n          'v-date-picker-month__day--week-start': item.isWeekStart\n        }],\n        \"data-v-date\": !item.isDisabled ? item.isoDate : undefined\n      }, [(props.showAdjacentMonths || !item.isAdjacent) && _createVNode(VDefaultsProvider, {\n        \"defaults\": {\n          VBtn: {\n            color: (item.isSelected || item.isToday) && !item.isDisabled ? props.color : undefined,\n            disabled: item.isDisabled,\n            icon: true,\n            ripple: false,\n            text: item.localized,\n            variant: item.isDisabled ? 'text' : item.isToday && !item.isSelected ? 'outlined' : 'flat',\n            onClick: () => onClick(item.date)\n          }\n        }\n      }, {\n        default: () => [slots.day?.(slotProps) ?? _createVNode(VBtn, slotProps.props, null)]\n      })]);\n    })])]);\n  }\n});\n//# sourceMappingURL=VDatePickerMonth.mjs.map",
      "start": 1719309442696,
      "end": 1719309442899,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1719309442899,
      "end": 1719309442899,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1719309442899,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1719309442900,
      "end": 1719309442900,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1719309442900,
      "end": 1719309442901,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1719309442901,
      "end": 1719309442901,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1719309442901,
      "end": 1719309442901,
      "order": "normal"
    }
  ]
}
