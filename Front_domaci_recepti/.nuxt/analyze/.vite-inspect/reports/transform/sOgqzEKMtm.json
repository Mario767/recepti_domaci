{
  "resolvedId": "C:/Users/mario/Documents/Projekti web/Recepti/Front_domaci_recepti/node_modules/vuetify/lib/components/VExpansionPanel/VExpansionPanels.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VExpansionPanel.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const VExpansionPanelSymbol = Symbol.for('vuetify:v-expansion-panel');\nconst allowedVariants = ['default', 'accordion', 'inset', 'popout'];\nexport const makeVExpansionPanelsProps = propsFactory({\n  color: String,\n  static: Boolean,\n  variant: {\n    type: String,\n    default: 'default',\n    validator: v => allowedVariants.includes(v)\n  },\n  readonly: Boolean,\n  ...makeComponentProps(),\n  ...makeGroupProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VExpansionPanels');\nexport const VExpansionPanels = genericComponent()({\n  name: 'VExpansionPanels',\n  props: makeVExpansionPanelsProps(),\n  emits: {\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useGroup(props, VExpansionPanelSymbol);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const variantClass = computed(() => props.variant && `v-expansion-panels--variant-${props.variant}`);\n    provideDefaults({\n      VExpansionPanel: {\n        color: toRef(props, 'color')\n      },\n      VExpansionPanelTitle: {\n        readonly: toRef(props, 'readonly'),\n        static: toRef(props, 'static')\n      }\n    });\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-expansion-panels', themeClasses.value, variantClass.value, props.class],\n      \"style\": props.style\n    }, slots));\n    return {};\n  }\n});\n//# sourceMappingURL=VExpansionPanels.mjs.map",
      "start": 1719309410507,
      "end": 1719309410690,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1719309410690,
      "end": 1719309410690,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309410690,
      "end": 1719309410691,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1719309410691,
      "end": 1719309410691,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1719309410694,
      "end": 1719309410694,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1719309410694,
      "end": 1719309410694,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309410694,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1719309410695,
      "end": 1719309410695,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1719309410695,
      "end": 1719309410696,
      "order": "normal"
    }
  ]
}
