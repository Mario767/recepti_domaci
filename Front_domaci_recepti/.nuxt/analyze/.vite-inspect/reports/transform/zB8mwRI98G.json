{
  "resolvedId": "C:/Users/mario/Documents/Projekti web/Recepti/Front_domaci_recepti/pages/Register/index.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d3a2679e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = { class: \"login-container\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", { class: \"title\" }, \"Domaći recepti\", -1))\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error-message\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"error-message\"\n}\nconst _hoisted_7 = {\n  key: 2,\n  class: \"error-message\"\n}\nconst _hoisted_8 = {\n  key: 3,\n  class: \"error-message\"\n}\nconst _hoisted_9 = { key: 1 }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-message\"\n}\nconst _hoisted_11 = { key: 1 }\nconst _hoisted_12 = { key: 2 }\nconst _hoisted_13 = { key: 2 }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Uspješna registracija!\", -1))\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Bit ćete preusmjereni na stranicu za prijavu...\", -1))\nconst _hoisted_16 = [\n  _hoisted_14,\n  _hoisted_15\n]\nconst _hoisted_17 = {\n  key: 3,\n  class: \"error-message\"\n}\n\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\nconst router = useRouter()\n\nconst korisnicko_ime = ref('')\nconst lozinka = ref('')\nconst email = ref('')\nconst potvrda_lozinke = ref('')\nconst confirmationCode = ref('')\nconst showConfirmationCodeInput = ref(false)\nconst greska = ref('')\nconst registrationSuccess = ref(false)\nconst obavijest = ref('')\nconst showSnackbar = ref(false)\nconst preostaloVrijeme = ref('')\nconst errors = ref({\n  korisnicko_ime: '',\n  email: '',\n  lozinka: '',\n  potvrda_lozinke: '',\n  confirmationCode: '' // Dodali smo novo polje za grešku kod koda za potvrdu\n})\n\nlet countdownInterval = null\n\nconst startCountdown = () => {\n  clearInterval(countdownInterval); // Resetirajte odbrojavanje\n  let timeLeft = 180; // 3 minute\n  countdownInterval = setInterval(() => {\n    if (timeLeft > 0) {\n      timeLeft--;\n      preostaloVrijeme.value = timeLeft;\n    } else {\n      clearInterval(countdownInterval);\n      preostaloVrijeme.value = '';\n    }\n  }, 1000);\n}\n\nconst validateForm = () => {\n  let valid = true;\n\n  // Validacija za korisničko ime\n  if (!korisnicko_ime.value) {\n    errors.value.korisnicko_ime = 'Korisničko ime je obavezno.';\n    valid = false;\n  } else if (korisnicko_ime.value.length > 40) {\n    errors.value.korisnicko_ime = 'Korisničko ime ne može biti duže od 40 znakova.';\n    valid = false;\n  } else {\n    errors.value.korisnicko_ime = '';\n  }\n\n  // Validacija za email\n  if (!email.value) {\n    errors.value.email = 'Email je obavezan.';\n    valid = false;\n  } else if (email.value.length > 50) {\n    errors.value.email = 'Email ne može biti duži od 50 znakova.';\n    valid = false;\n  } else if (!email.value.includes('@')) {\n    errors.value.email = 'Email mora sadržavati @ znak.';\n    valid = false;\n  } else {\n    errors.value.email = '';\n  }\n\n  // Validacija za lozinku\n  if (!lozinka.value) {\n    errors.value.lozinka = 'Lozinka je obavezna.';\n    valid = false;\n  } else if (lozinka.value.length > 50) {\n    errors.value.lozinka = 'Lozinka ne može biti duža od 50 znakova.';\n    valid = false;\n  } else if (lozinka.value.length < 6) {\n    errors.value.lozinka = 'Lozinka mora biti duža od 5 znakova.';\n    valid = false;\n  } else {\n    errors.value.lozinka = '';\n  }\n\n  // Validacija za potvrdu lozinke\n  if (!potvrda_lozinke.value) {\n    errors.value.potvrda_lozinke = 'Potvrda lozinke je obavezna.';\n    valid = false;\n  } else if (potvrda_lozinke.value !== lozinka.value) {\n    errors.value.potvrda_lozinke = 'Lozinke se moraju podudarati.';\n    valid = false;\n  } else {\n    errors.value.potvrda_lozinke = '';\n  }\n\n  return valid;\n}\n\nconst sendConfirmationCode = async () => {\n  if (validateForm()) {\n    try {\n      const response = await axios.post('http://localhost:8000/api/sendcode', {\n        korisnicko_ime: korisnicko_ime.value,\n        email: email.value,\n        lozinka: lozinka.value,\n        potvrda_lozinke: potvrda_lozinke.value\n      })\n      console.log(response)\n      if (response.status === 200) {\n        showConfirmationCodeInput.value = true\n        startCountdown()\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 422) {\n        const { errors: serverErrors } = error.response.data;\n        // Postavite greske dobivene od servera u errors ref objekt\n        if (serverErrors.korisnicko_ime) {\n          errors.value.korisnicko_ime = serverErrors.korisnicko_ime[0];\n        }\n        if (serverErrors.email) {\n          errors.value.email = serverErrors.email[0];\n        }\n        if (serverErrors.lozinka) {\n          errors.value.lozinka = serverErrors.lozinka[0];\n        }\n        if (serverErrors.potvrda_lozinke) {\n          errors.value.potvrda_lozinke = serverErrors.potvrda_lozinke[0];\n        }\n      } else {\n        greska.value = 'Došlo je do greške. Pokušajte ponovno.';\n      }\n      console.error(error)\n    }\n  }\n}\n\nconst confirmCode = async () => {\n  try {\n    const response = await axios.post('http://localhost:8000/api/confirmcode', {\n      confirmationCode: confirmationCode.value,\n      korisnicko_ime: korisnicko_ime.value,\n      lozinka: lozinka.value,\n      email: email.value,\n    });\n    console.log(response);\n    if (response.data.message === 'Registracija uspješna!') {\n      registrationSuccess.value = true;\n      obavijest.value = 'Registracija uspješna!';\n      showSnackbar.value = true;\n      clearInterval(countdownInterval);\n      setTimeout(() => {\n        router.push('/login');\n      }, 2000); // Automatsko preusmjeravanje nakon 2 sekunde\n    } else {\n      // Postavite grešku za kod za potvrdu\n      errors.value.confirmationCode = response.data.message;\n      obavijest.value = response.data.message;\n      showSnackbar.value = true;\n      setTimeout(() => {\n        showSnackbar.value = false;\n      }, 3000); // Automatsko skrivanje obavijesti nakon 3 sekunde\n    }\n  } catch (error) {\n    console.error(error);\n    errors.value.confirmationCode = 'Neispravan kod za potvrdu.';\n  }\n};\n\nconst resendConfirmationCode = async () => {\n  try {\n    const response = await axios.post('http://localhost:8000/api/sendcode', {\n      korisnicko_ime: korisnicko_ime.value,\n      lozinka: lozinka.value,\n      email: email.value,\n    })\n    console.log(response)\n    if (response.status === 200) {\n      startCountdown()\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      (!showConfirmationCodeInput.value && !registrationSuccess.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"text\",\n              placeholder: \"Unesi korisničko ime\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((korisnicko_ime).value = $event))\n            }, null, 512), [\n              [_vModelText, korisnicko_ime.value]\n            ]),\n            (errors.value.korisnicko_ime)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(errors.value.korisnicko_ime), 1))\n              : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"email\",\n              placeholder: \"Unesi email\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((email).value = $event))\n            }, null, 512), [\n              [_vModelText, email.value]\n            ]),\n            (errors.value.email)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString(errors.value.email), 1))\n              : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"password\",\n              placeholder: \"Unesi lozinku\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((lozinka).value = $event))\n            }, null, 512), [\n              [_vModelText, lozinka.value]\n            ]),\n            (errors.value.lozinka)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString(errors.value.lozinka), 1))\n              : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"password\",\n              placeholder: \"Potvrdi lozinku\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((potvrda_lozinke).value = $event))\n            }, null, 512), [\n              [_vModelText, potvrda_lozinke.value]\n            ]),\n            (errors.value.potvrda_lozinke)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString(errors.value.potvrda_lozinke), 1))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"button\", {\n              class: \"register-button\",\n              onClick: sendConfirmationCode\n            }, \"Registriraj se\")\n          ]))\n        : (showConfirmationCodeInput.value && !registrationSuccess.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"input-field\",\n                type: \"text\",\n                placeholder: \"Unesi kod za potvrdu\",\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((confirmationCode).value = $event))\n              }, null, 512), [\n                [_vModelText, confirmationCode.value]\n              ]),\n              (errors.value.confirmationCode)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString(errors.value.confirmationCode), 1))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"button\", {\n                class: \"register-button\",\n                onClick: confirmCode\n              }, \"Potvrdi kod\"),\n              _createElementVNode(\"button\", {\n                class: \"register-button\",\n                onClick: resendConfirmationCode\n              }, \"Ponovno pošalji kod\"),\n              (preostaloVrijeme.value > 0)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"Kod ističe za: \" + _toDisplayString(preostaloVrijeme.value) + \" sekundi\", 1))\n                : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"Kod je istekao. Ponovno pošaljite kod za prijavu.\"))\n            ]))\n          : (registrationSuccess.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _hoisted_16))\n            : _createCommentVNode(\"\", true),\n      (greska.value)\n        ? (_openBlock(), _createElementBlock(\"p\", _hoisted_17, _toDisplayString(greska.value), 1))\n        : _createCommentVNode(\"\", true),\n      (obavijest.value)\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 4,\n            class: _normalizeClass({ snackbar: true, show: showSnackbar.value })\n          }, _toDisplayString(obavijest.value), 3))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})",
      "start": 1719309405608,
      "end": 1719309405608
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1719309405608,
      "end": 1719309405608,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1719309405608,
      "end": 1719309405608,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1719309405608,
      "end": 1719309405608,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1719309405608,
      "end": 1719309405608,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-d3a2679e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { id: \"app\" };\nconst _hoisted_2 = { class: \"login-container\" };\nconst _hoisted_3 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h1\", { class: \"title\" }, \"Domaći recepti\", -1));\nconst _hoisted_4 = { key: 0 };\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"error-message\"\n};\nconst _hoisted_8 = {\n  key: 3,\n  class: \"error-message\"\n};\nconst _hoisted_9 = { key: 1 };\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_11 = { key: 1 };\nconst _hoisted_12 = { key: 2 };\nconst _hoisted_13 = { key: 2 };\nconst _hoisted_14 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"h2\", null, \"Uspješna registracija!\", -1));\nconst _hoisted_15 = /* @__PURE__ */ _withScopeId(() => /* @__PURE__ */ _createElementVNode(\"p\", null, \"Bit ćete preusmjereni na stranicu za prijavu...\", -1));\nconst _hoisted_16 = [\n  _hoisted_14,\n  _hoisted_15\n];\nconst _hoisted_17 = {\n  key: 3,\n  class: \"error-message\"\n};\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"index\",\n  setup(__props) {\n    const router = useRouter();\n    const korisnicko_ime = ref(\"\");\n    const lozinka = ref(\"\");\n    const email = ref(\"\");\n    const potvrda_lozinke = ref(\"\");\n    const confirmationCode = ref(\"\");\n    const showConfirmationCodeInput = ref(false);\n    const greska = ref(\"\");\n    const registrationSuccess = ref(false);\n    const obavijest = ref(\"\");\n    const showSnackbar = ref(false);\n    const preostaloVrijeme = ref(\"\");\n    const errors = ref({\n      korisnicko_ime: \"\",\n      email: \"\",\n      lozinka: \"\",\n      potvrda_lozinke: \"\",\n      confirmationCode: \"\"\n      // Dodali smo novo polje za grešku kod koda za potvrdu\n    });\n    let countdownInterval = null;\n    const startCountdown = () => {\n      clearInterval(countdownInterval);\n      let timeLeft = 180;\n      countdownInterval = setInterval(() => {\n        if (timeLeft > 0) {\n          timeLeft--;\n          preostaloVrijeme.value = timeLeft;\n        } else {\n          clearInterval(countdownInterval);\n          preostaloVrijeme.value = \"\";\n        }\n      }, 1e3);\n    };\n    const validateForm = () => {\n      let valid = true;\n      if (!korisnicko_ime.value) {\n        errors.value.korisnicko_ime = \"Korisničko ime je obavezno.\";\n        valid = false;\n      } else if (korisnicko_ime.value.length > 40) {\n        errors.value.korisnicko_ime = \"Korisničko ime ne može biti duže od 40 znakova.\";\n        valid = false;\n      } else {\n        errors.value.korisnicko_ime = \"\";\n      }\n      if (!email.value) {\n        errors.value.email = \"Email je obavezan.\";\n        valid = false;\n      } else if (email.value.length > 50) {\n        errors.value.email = \"Email ne može biti duži od 50 znakova.\";\n        valid = false;\n      } else if (!email.value.includes(\"@\")) {\n        errors.value.email = \"Email mora sadržavati @ znak.\";\n        valid = false;\n      } else {\n        errors.value.email = \"\";\n      }\n      if (!lozinka.value) {\n        errors.value.lozinka = \"Lozinka je obavezna.\";\n        valid = false;\n      } else if (lozinka.value.length > 50) {\n        errors.value.lozinka = \"Lozinka ne može biti duža od 50 znakova.\";\n        valid = false;\n      } else if (lozinka.value.length < 6) {\n        errors.value.lozinka = \"Lozinka mora biti duža od 5 znakova.\";\n        valid = false;\n      } else {\n        errors.value.lozinka = \"\";\n      }\n      if (!potvrda_lozinke.value) {\n        errors.value.potvrda_lozinke = \"Potvrda lozinke je obavezna.\";\n        valid = false;\n      } else if (potvrda_lozinke.value !== lozinka.value) {\n        errors.value.potvrda_lozinke = \"Lozinke se moraju podudarati.\";\n        valid = false;\n      } else {\n        errors.value.potvrda_lozinke = \"\";\n      }\n      return valid;\n    };\n    const sendConfirmationCode = async () => {\n      if (validateForm()) {\n        try {\n          const response = await axios.post(\"http://localhost:8000/api/sendcode\", {\n            korisnicko_ime: korisnicko_ime.value,\n            email: email.value,\n            lozinka: lozinka.value,\n            potvrda_lozinke: potvrda_lozinke.value\n          });\n          console.log(response);\n          if (response.status === 200) {\n            showConfirmationCodeInput.value = true;\n            startCountdown();\n          }\n        } catch (error) {\n          if (error.response && error.response.status === 422) {\n            const { errors: serverErrors } = error.response.data;\n            if (serverErrors.korisnicko_ime) {\n              errors.value.korisnicko_ime = serverErrors.korisnicko_ime[0];\n            }\n            if (serverErrors.email) {\n              errors.value.email = serverErrors.email[0];\n            }\n            if (serverErrors.lozinka) {\n              errors.value.lozinka = serverErrors.lozinka[0];\n            }\n            if (serverErrors.potvrda_lozinke) {\n              errors.value.potvrda_lozinke = serverErrors.potvrda_lozinke[0];\n            }\n          } else {\n            greska.value = \"Došlo je do greške. Pokušajte ponovno.\";\n          }\n          console.error(error);\n        }\n      }\n    };\n    const confirmCode = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/api/confirmcode\", {\n          confirmationCode: confirmationCode.value,\n          korisnicko_ime: korisnicko_ime.value,\n          lozinka: lozinka.value,\n          email: email.value\n        });\n        console.log(response);\n        if (response.data.message === \"Registracija uspješna!\") {\n          registrationSuccess.value = true;\n          obavijest.value = \"Registracija uspješna!\";\n          showSnackbar.value = true;\n          clearInterval(countdownInterval);\n          setTimeout(() => {\n            router.push(\"/login\");\n          }, 2e3);\n        } else {\n          errors.value.confirmationCode = response.data.message;\n          obavijest.value = response.data.message;\n          showSnackbar.value = true;\n          setTimeout(() => {\n            showSnackbar.value = false;\n          }, 3e3);\n        }\n      } catch (error) {\n        console.error(error);\n        errors.value.confirmationCode = \"Neispravan kod za potvrdu.\";\n      }\n    };\n    const resendConfirmationCode = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/api/sendcode\", {\n          korisnicko_ime: korisnicko_ime.value,\n          lozinka: lozinka.value,\n          email: email.value\n        });\n        console.log(response);\n        if (response.status === 200) {\n          startCountdown();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _hoisted_3,\n          !showConfirmationCodeInput.value && !registrationSuccess.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"text\",\n              placeholder: \"Unesi korisničko ime\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => korisnicko_ime.value = $event)\n            }, null, 512), [\n              [_vModelText, korisnicko_ime.value]\n            ]),\n            errors.value.korisnicko_ime ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(errors.value.korisnicko_ime), 1)) : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"email\",\n              placeholder: \"Unesi email\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event) => email.value = $event)\n            }, null, 512), [\n              [_vModelText, email.value]\n            ]),\n            errors.value.email ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString(errors.value.email), 1)) : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"password\",\n              placeholder: \"Unesi lozinku\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event) => lozinka.value = $event)\n            }, null, 512), [\n              [_vModelText, lozinka.value]\n            ]),\n            errors.value.lozinka ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString(errors.value.lozinka), 1)) : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"password\",\n              placeholder: \"Potvrdi lozinku\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event) => potvrda_lozinke.value = $event)\n            }, null, 512), [\n              [_vModelText, potvrda_lozinke.value]\n            ]),\n            errors.value.potvrda_lozinke ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString(errors.value.potvrda_lozinke), 1)) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"button\", {\n              class: \"register-button\",\n              onClick: sendConfirmationCode\n            }, \"Registriraj se\")\n          ])) : showConfirmationCodeInput.value && !registrationSuccess.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"text\",\n              placeholder: \"Unesi kod za potvrdu\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event) => confirmationCode.value = $event)\n            }, null, 512), [\n              [_vModelText, confirmationCode.value]\n            ]),\n            errors.value.confirmationCode ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString(errors.value.confirmationCode), 1)) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"button\", {\n              class: \"register-button\",\n              onClick: confirmCode\n            }, \"Potvrdi kod\"),\n            _createElementVNode(\"button\", {\n              class: \"register-button\",\n              onClick: resendConfirmationCode\n            }, \"Ponovno pošalji kod\"),\n            preostaloVrijeme.value > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"Kod ističe za: \" + _toDisplayString(preostaloVrijeme.value) + \" sekundi\", 1)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"Kod je istekao. Ponovno pošaljite kod za prijavu.\"))\n          ])) : registrationSuccess.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _hoisted_16)) : _createCommentVNode(\"\", true),\n          greska.value ? (_openBlock(), _createElementBlock(\"p\", _hoisted_17, _toDisplayString(greska.value), 1)) : _createCommentVNode(\"\", true),\n          obavijest.value ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 4,\n            class: _normalizeClass({ snackbar: true, show: showSnackbar.value })\n          }, _toDisplayString(obavijest.value), 3)) : _createCommentVNode(\"\", true)\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1719309405608,
      "end": 1719309405802,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "C:/Users/mario/Documents/Projekti web/Recepti/Front_domaci_recepti/pages/Register/index.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d3a2679e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = { class: \"login-container\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", { class: \"title\" }, \"Domaći recepti\", -1))\nconst _hoisted_4 = { key: 0 }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error-message\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"error-message\"\n}\nconst _hoisted_7 = {\n  key: 2,\n  class: \"error-message\"\n}\nconst _hoisted_8 = {\n  key: 3,\n  class: \"error-message\"\n}\nconst _hoisted_9 = { key: 1 }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-message\"\n}\nconst _hoisted_11 = { key: 1 }\nconst _hoisted_12 = { key: 2 }\nconst _hoisted_13 = { key: 2 }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Uspješna registracija!\", -1))\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Bit ćete preusmjereni na stranicu za prijavu...\", -1))\nconst _hoisted_16 = [\n  _hoisted_14,\n  _hoisted_15\n]\nconst _hoisted_17 = {\n  key: 3,\n  class: \"error-message\"\n}\n\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport axios from 'axios'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\nconst router = useRouter()\n\nconst korisnicko_ime = ref('')\nconst lozinka = ref('')\nconst email = ref('')\nconst potvrda_lozinke = ref('')\nconst confirmationCode = ref('')\nconst showConfirmationCodeInput = ref(false)\nconst greska = ref('')\nconst registrationSuccess = ref(false)\nconst obavijest = ref('')\nconst showSnackbar = ref(false)\nconst preostaloVrijeme = ref('')\nconst errors = ref({\n  korisnicko_ime: '',\n  email: '',\n  lozinka: '',\n  potvrda_lozinke: '',\n  confirmationCode: '' // Dodali smo novo polje za grešku kod koda za potvrdu\n})\n\nlet countdownInterval = null\n\nconst startCountdown = () => {\n  clearInterval(countdownInterval); // Resetirajte odbrojavanje\n  let timeLeft = 180; // 3 minute\n  countdownInterval = setInterval(() => {\n    if (timeLeft > 0) {\n      timeLeft--;\n      preostaloVrijeme.value = timeLeft;\n    } else {\n      clearInterval(countdownInterval);\n      preostaloVrijeme.value = '';\n    }\n  }, 1000);\n}\n\nconst validateForm = () => {\n  let valid = true;\n\n  // Validacija za korisničko ime\n  if (!korisnicko_ime.value) {\n    errors.value.korisnicko_ime = 'Korisničko ime je obavezno.';\n    valid = false;\n  } else if (korisnicko_ime.value.length > 40) {\n    errors.value.korisnicko_ime = 'Korisničko ime ne može biti duže od 40 znakova.';\n    valid = false;\n  } else {\n    errors.value.korisnicko_ime = '';\n  }\n\n  // Validacija za email\n  if (!email.value) {\n    errors.value.email = 'Email je obavezan.';\n    valid = false;\n  } else if (email.value.length > 50) {\n    errors.value.email = 'Email ne može biti duži od 50 znakova.';\n    valid = false;\n  } else if (!email.value.includes('@')) {\n    errors.value.email = 'Email mora sadržavati @ znak.';\n    valid = false;\n  } else {\n    errors.value.email = '';\n  }\n\n  // Validacija za lozinku\n  if (!lozinka.value) {\n    errors.value.lozinka = 'Lozinka je obavezna.';\n    valid = false;\n  } else if (lozinka.value.length > 50) {\n    errors.value.lozinka = 'Lozinka ne može biti duža od 50 znakova.';\n    valid = false;\n  } else if (lozinka.value.length < 6) {\n    errors.value.lozinka = 'Lozinka mora biti duža od 5 znakova.';\n    valid = false;\n  } else {\n    errors.value.lozinka = '';\n  }\n\n  // Validacija za potvrdu lozinke\n  if (!potvrda_lozinke.value) {\n    errors.value.potvrda_lozinke = 'Potvrda lozinke je obavezna.';\n    valid = false;\n  } else if (potvrda_lozinke.value !== lozinka.value) {\n    errors.value.potvrda_lozinke = 'Lozinke se moraju podudarati.';\n    valid = false;\n  } else {\n    errors.value.potvrda_lozinke = '';\n  }\n\n  return valid;\n}\n\nconst sendConfirmationCode = async () => {\n  if (validateForm()) {\n    try {\n      const response = await axios.post('http://localhost:8000/api/sendcode', {\n        korisnicko_ime: korisnicko_ime.value,\n        email: email.value,\n        lozinka: lozinka.value,\n        potvrda_lozinke: potvrda_lozinke.value\n      })\n      console.log(response)\n      if (response.status === 200) {\n        showConfirmationCodeInput.value = true\n        startCountdown()\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 422) {\n        const { errors: serverErrors } = error.response.data;\n        // Postavite greske dobivene od servera u errors ref objekt\n        if (serverErrors.korisnicko_ime) {\n          errors.value.korisnicko_ime = serverErrors.korisnicko_ime[0];\n        }\n        if (serverErrors.email) {\n          errors.value.email = serverErrors.email[0];\n        }\n        if (serverErrors.lozinka) {\n          errors.value.lozinka = serverErrors.lozinka[0];\n        }\n        if (serverErrors.potvrda_lozinke) {\n          errors.value.potvrda_lozinke = serverErrors.potvrda_lozinke[0];\n        }\n      } else {\n        greska.value = 'Došlo je do greške. Pokušajte ponovno.';\n      }\n      console.error(error)\n    }\n  }\n}\n\nconst confirmCode = async () => {\n  try {\n    const response = await axios.post('http://localhost:8000/api/confirmcode', {\n      confirmationCode: confirmationCode.value,\n      korisnicko_ime: korisnicko_ime.value,\n      lozinka: lozinka.value,\n      email: email.value,\n    });\n    console.log(response);\n    if (response.data.message === 'Registracija uspješna!') {\n      registrationSuccess.value = true;\n      obavijest.value = 'Registracija uspješna!';\n      showSnackbar.value = true;\n      clearInterval(countdownInterval);\n      setTimeout(() => {\n        router.push('/login');\n      }, 2000); // Automatsko preusmjeravanje nakon 2 sekunde\n    } else {\n      // Postavite grešku za kod za potvrdu\n      errors.value.confirmationCode = response.data.message;\n      obavijest.value = response.data.message;\n      showSnackbar.value = true;\n      setTimeout(() => {\n        showSnackbar.value = false;\n      }, 3000); // Automatsko skrivanje obavijesti nakon 3 sekunde\n    }\n  } catch (error) {\n    console.error(error);\n    errors.value.confirmationCode = 'Neispravan kod za potvrdu.';\n  }\n};\n\nconst resendConfirmationCode = async () => {\n  try {\n    const response = await axios.post('http://localhost:8000/api/sendcode', {\n      korisnicko_ime: korisnicko_ime.value,\n      lozinka: lozinka.value,\n      email: email.value,\n    })\n    console.log(response)\n    if (response.status === 200) {\n      startCountdown()\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      (!showConfirmationCodeInput.value && !registrationSuccess.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"text\",\n              placeholder: \"Unesi korisničko ime\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((korisnicko_ime).value = $event))\n            }, null, 512), [\n              [_vModelText, korisnicko_ime.value]\n            ]),\n            (errors.value.korisnicko_ime)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(errors.value.korisnicko_ime), 1))\n              : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"email\",\n              placeholder: \"Unesi email\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((email).value = $event))\n            }, null, 512), [\n              [_vModelText, email.value]\n            ]),\n            (errors.value.email)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString(errors.value.email), 1))\n              : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"password\",\n              placeholder: \"Unesi lozinku\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((lozinka).value = $event))\n            }, null, 512), [\n              [_vModelText, lozinka.value]\n            ]),\n            (errors.value.lozinka)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, _toDisplayString(errors.value.lozinka), 1))\n              : _createCommentVNode(\"\", true),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"input-field\",\n              type: \"password\",\n              placeholder: \"Potvrdi lozinku\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((potvrda_lozinke).value = $event))\n            }, null, 512), [\n              [_vModelText, potvrda_lozinke.value]\n            ]),\n            (errors.value.potvrda_lozinke)\n              ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString(errors.value.potvrda_lozinke), 1))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"button\", {\n              class: \"register-button\",\n              onClick: sendConfirmationCode\n            }, \"Registriraj se\")\n          ]))\n        : (showConfirmationCodeInput.value && !registrationSuccess.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"input-field\",\n                type: \"text\",\n                placeholder: \"Unesi kod za potvrdu\",\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((confirmationCode).value = $event))\n              }, null, 512), [\n                [_vModelText, confirmationCode.value]\n              ]),\n              (errors.value.confirmationCode)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString(errors.value.confirmationCode), 1))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"button\", {\n                class: \"register-button\",\n                onClick: confirmCode\n              }, \"Potvrdi kod\"),\n              _createElementVNode(\"button\", {\n                class: \"register-button\",\n                onClick: resendConfirmationCode\n              }, \"Ponovno pošalji kod\"),\n              (preostaloVrijeme.value > 0)\n                ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"Kod ističe za: \" + _toDisplayString(preostaloVrijeme.value) + \" sekundi\", 1))\n                : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"Kod je istekao. Ponovno pošaljite kod za prijavu.\"))\n            ]))\n          : (registrationSuccess.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _hoisted_16))\n            : _createCommentVNode(\"\", true),\n      (greska.value)\n        ? (_openBlock(), _createElementBlock(\"p\", _hoisted_17, _toDisplayString(greska.value), 1))\n        : _createCommentVNode(\"\", true),\n      (obavijest.value)\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 4,\n            class: _normalizeClass({ snackbar: true, show: showSnackbar.value })\n          }, _toDisplayString(obavijest.value), 3))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1719309405802,
      "end": 1719309405802,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1719309405802,
      "end": 1719309405802,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1719309405802,
      "end": 1719309405802,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1719309405802,
      "end": 1719309405802,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309405802,
      "end": 1719309405802,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1719309405803,
      "end": 1719309405803,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1719309405803,
      "end": 1719309405803,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1719309405803,
      "end": 1719309405803,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1719309405803,
      "end": 1719309405803,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1719309405803,
      "end": 1719309405803,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1719309405804,
      "end": 1719309405804,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1719309405805,
      "end": 1719309405805,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1719309405805,
      "end": 1719309405812,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1719309405812,
      "end": 1719309405812,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1719309405813,
      "end": 1719309405813,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1719309405814,
      "end": 1719309405814,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1719309405814,
      "end": 1719309405814,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1719309405814,
      "end": 1719309405814,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1719309405814,
      "end": 1719309405815,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1719309405815,
      "end": 1719309405815,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1719309405815,
      "end": 1719309405815,
      "order": "normal"
    }
  ]
}
