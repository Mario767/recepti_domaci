{"version":3,"file":"index-d2acb8a7.js","sources":["../../../../pages/Uredirecept/index.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h2 class=\"title\">Uredi recept</h2>\n    <form @submit.prevent=\"submitForm\" class=\"form-container\">\n      <div class=\"form-group\">\n        <label for=\"naziv_recepta\">Naziv recepta:</label>\n        <input type=\"text\" id=\"naziv_recepta\" v-model=\"nazivRecepta\" maxlength=\"60\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"opis\">Opis:</label>\n        <textarea id=\"opis\" v-model=\"opis\" maxlength=\"1000\" required></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"slika\">Slika:</label>\n        <input type=\"file\" id=\"slika\" @change=\"handleFileUpload\" accept=\"image/*\">\n        <span v-if=\"slikaTooLarge\" class=\"error-message\">Slika je prevelika (max 5 MB)</span>\n        <span v-if=\"slikaInvalidFormat\" class=\"error-message\">Neispravan format slike</span>\n      </div>\n      <div class=\"form-group\">\n        <v-combobox\n          label=\"Vrsta jela\"\n          v-model=\"vrstaJela\"\n          :items=\"['Glavno jelo', 'Predjelo', 'Desert']\"\n          required\n        ></v-combobox>\n      </div>\n      <button type=\"submit\" :disabled=\"slikaTooLarge || slikaInvalidFormat\">Spremi recept</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport accountStore from '@/composables/accountStore';\n\ndefinePageMeta({\n  layout: ''\n});\n\nexport default {\n  data() {\n    return {\n      originalRecept: null,\n      nazivRecepta: '',\n      opis: '',\n      slika: null,\n      vrstaJela: null,\n      slikaTooLarge: false,\n      slikaInvalidFormat: false\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      const maxSize = 5 * 1024 * 1024; // 5 MB limit\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/webp']; // Allowed image types\n      if (!file) return;\n\n      if (file.size > maxSize) {\n        this.slikaTooLarge = true;\n        this.slikaInvalidFormat = false;\n        return;\n      }\n\n      if (!allowedTypes.includes(file.type)) {\n        this.slikaInvalidFormat = true;\n        this.slikaTooLarge = false;\n        return;\n      }\n\n      this.slikaTooLarge = false;\n      this.slikaInvalidFormat = false;\n      this.slika = file;\n    },\n    submitForm() {\n      if (this.originalRecept.nazivRecepta === this.nazivRecepta &&\n        this.originalRecept.opis === this.opis &&\n        this.originalRecept.vrstaJela === this.vrstaJela &&\n        !this.slika) {\n        this.$router.go(-1);\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('recept_id', accountStore.state.receptId);\n      formData.append('naziv_recepta', this.nazivRecepta);\n      formData.append('opis', this.opis);\n      if (this.slika) {\n        formData.append('slika', this.slika);\n      }\n      formData.append('vrstajela', this.vrstaJela);\n\n      const authToken = document.cookie.replace(/(?:(?:^|.*;\\s*)authToken\\s*=\\s*([^;]*).*$)|^.*$/, \"$1\");\n\n      axios.post('http://localhost:8000/api/updaterec', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${authToken}`\n          }\n        })\n        .then(() => {\n          this.$router.go(-1);\n        })\n        .catch(error => {\n          console.error('Došlo je do greške prilikom spremanja recepta:', error);\n        });\n    },\n    getReceptData(id_recepta) {\n      axios.get(`http://127.0.0.1:8000/api/dohvatirec/${id_recepta}`)\n        .then(response => {\n          this.originalRecept = response.data;\n          this.nazivRecepta = response.data.naziv_recepta;\n          this.opis = response.data.opis;\n          this.vrstaJela = response.data.vrstajela;\n        })\n        .catch(error => {\n          console.error('Došlo je do greške prilikom dohvaćanja recepta:', error);\n        });\n    }\n  },\n  created() {\n    let receptId = accountStore.state.receptId;\n    if (typeof sessionStorage !== 'undefined') {\n      receptId = receptId || sessionStorage.getItem('receptId');\n    }\n    this.getReceptData(receptId);\n  }\n};\n</script>\n\n<style scoped>\n#app {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n}\n\n.title {\n  font-size: 2rem;\n  font-weight: bold;\n  color: tomato;\n  margin-bottom: 1rem;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 600px;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 0.5rem;\n}\n\ninput[type=\"text\"],\ntextarea,\nbutton[type=\"submit\"],\n.v-combobox {\n  width: 100%;\n  padding: 0.5rem;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n.v-combobox .v-input__control {\n  width: 100%;\n}\n\nbutton[type=\"submit\"] {\n  background-color: #FF6347;\n  color: white;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  padding: 0.65rem 1rem; /* Adjusted padding */\n  align-self: center;\n  max-width: 200px; /* Maximalna širina dugmeta */\n  width: 100%; /* Da se dugme prilagodi roditeljskom kontejneru */\n  box-sizing: border-box; /* Da padding ne utječe na ukupnu širinu */\n}\n\n\nbutton[type=\"submit\"]:hover {\n  background-color: #ff1b3d;\n}\n\n.error-message {\n  color: red;\n}\n\n@media (max-width: 1200px) {\n  .form-container {\n    max-width: 80%;\n  }\n}\n\n@media (max-width: 992px) {\n  .form-container {\n    max-width: 90%;\n  }\n}\n\n@media (max-width: 768px) {\n  .form-container {\n    max-width: 95%;\n  }\n\n  input[type=\"text\"],\n  textarea,\n  button[type=\"submit\"],\n  .v-combobox {\n    font-size: 0.875rem;\n    padding: 0.4rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .form-container {\n    max-width: 100%;\n  }\n\n  input[type=\"text\"],\n  textarea,\n  button[type=\"submit\"],\n  .v-combobox {\n    font-size: 0.75rem;\n    padding: 0.3rem;\n  }\n}\n</style>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrIncludeBooleanAttr"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAuCA,MAAK,YAAU;AAAA,EACb,OAAO;AACL,WAAO;AAAA,MACL,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,MACX,eAAe;AAAA,MACf,oBAAoB;AAAA;EAEvB;AAAA,EACD,SAAS;AAAA,IACP,iBAAiB,OAAO;AACtB,YAAM,OAAO,MAAM,OAAO,MAAM,CAAC;AACjC,YAAM,UAAU,IAAI,OAAO;AAC3B,YAAM,eAAe,CAAC,cAAc,aAAa,YAAY;AAC7D,UAAI,CAAC;AAAM;AAEX,UAAI,KAAK,OAAO,SAAS;AACvB,aAAK,gBAAgB;AACrB,aAAK,qBAAqB;AAC1B;AAAA,MACF;AAEA,UAAI,CAAC,aAAa,SAAS,KAAK,IAAI,GAAG;AACrC,aAAK,qBAAqB;AAC1B,aAAK,gBAAgB;AACrB;AAAA,MACF;AAEA,WAAK,gBAAgB;AACrB,WAAK,qBAAqB;AAC1B,WAAK,QAAQ;AAAA,IACd;AAAA,IACD,aAAa;AACX,UAAI,KAAK,eAAe,iBAAiB,KAAK,gBAC5C,KAAK,eAAe,SAAS,KAAK,QAClC,KAAK,eAAe,cAAc,KAAK,aACvC,CAAC,KAAK,OAAO;AACb,aAAK,QAAQ,GAAG,EAAE;AAClB;AAAA,MACF;AAEA,YAAM,WAAW,IAAI;AACrB,eAAS,OAAO,aAAa,aAAa,MAAM,QAAQ;AACxD,eAAS,OAAO,iBAAiB,KAAK,YAAY;AAClD,eAAS,OAAO,QAAQ,KAAK,IAAI;AACjC,UAAI,KAAK,OAAO;AACd,iBAAS,OAAO,SAAS,KAAK,KAAK;AAAA,MACrC;AACA,eAAS,OAAO,aAAa,KAAK,SAAS;AAE3C,YAAM,YAAY,SAAS,OAAO,QAAQ,mDAAmD,IAAI;AAEjG,YAAM,KAAK,uCAAuC,UAAU;AAAA,QACxD,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,iBAAiB,UAAU,SAAS;AAAA,QACtC;AAAA,OACD,EACA,KAAK,MAAM;AACV,aAAK,QAAQ,GAAG,EAAE;AAAA,OACnB,EACA,MAAM,WAAS;AACd,gBAAQ,MAAM,kDAAkD,KAAK;AAAA,MACvE,CAAC;AAAA,IACJ;AAAA,IACD,cAAc,YAAY;AACxB,YAAM,IAAI,wCAAwC,UAAU,EAAE,EAC3D,KAAK,cAAY;AAChB,aAAK,iBAAiB,SAAS;AAC/B,aAAK,eAAe,SAAS,KAAK;AAClC,aAAK,OAAO,SAAS,KAAK;AAC1B,aAAK,YAAY,SAAS,KAAK;AAAA,OAChC,EACA,MAAM,WAAS;AACd,gBAAQ,MAAM,mDAAmD,KAAK;AAAA,MACxE,CAAC;AAAA,IACL;AAAA,EACD;AAAA,EACD,UAAU;AACR,QAAI,WAAW,aAAa,MAAM;AAClC,QAAI,OAAO,mBAAmB,aAAa;AACzC,iBAAW,YAAY,eAAe,QAAQ,UAAU;AAAA,IAC1D;AACA,SAAK,cAAc,QAAQ;AAAA,EAC7B;AACF;;;eA9HOA,eAAAC,WAAA,EAAA,IAAG,MAAK,GAAA,MAAA,CAAA,0RAKwC,MAAY,YAAA,uNAI9B,MAAI,IAAA;MAKrB,MAAa,eAAA;;;;;MACb,MAAkB,oBAAA;;;;;;;IAI5B,OAAM;AAAA,gBACG,MAAS;AAAA,uCAAT,MAAS,YAAA;AAAA,IACjB,OAAO,CAAqC,eAAA,YAAA,QAAA;AAAA,IAC7C,UAAA;AAAA;AAG6B,QAAA,8BAAAC,sBAAA,MAAA,iBAAiB,MAAkB,kBAAA,IAAA,cAAA,EAAA,sDAAA;;;;;;;;;"}